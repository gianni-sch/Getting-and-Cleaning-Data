1+1
install.packages("swirl")
install.packages("testthat")
demo()
demo('graphics')
demo('plotmath')
demo('image')
clear()
clear
clc
View(draw.plotmath.cell)
View(draw.plotmath.cell)
quit()
demo()
demo("hclcolors")
demo("hclColors")
demo("plotmath")
demo("image")
demo("persp")
demo("recursion")
clear()
clearPushBack()
close.screen()
find.package("devtools")
installed.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
close.screen()
sweep()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flags_colors<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$landmass,flags$animate,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(pants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
tables(plants$Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris,iris$Sepal.Length,mean)
sapply(iris,iris$Sepal.Length,mean)
tapply(iris,iris$Sepal.Length,mean)
iris$Sepal.Length
sapply(iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,mean)
lapply(iris$Sepal.Length,mean)
tapply(iris,iris$Sepal.Length[,1],mean)
iris$Sepal.Length[,1]
iris$Sepal.Length[,]
iris$Sepal.Length
mean(irs$Sepal.Length)
mean(iris$Sepal.Length)
head(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
Head(mtcars)
head(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl=4, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
diff <- tapply(mtcars$hp,mt)
hp<-tapply(mtcars$hp, mtcars$cyl, mean)
hp
hp[1]
abs(hp[1]-hp[3])
debug(ls)
ls()
head(iris)
iris$Sepal.Length
iris$Sepal.Length[iris]
quit()
?debug
undebug(ls)
c
undebug(ls)
iris$Sepal.Length
iris$Sepal.Length[iris$Species=='virginica']
mean(iris$Sepal.Length[iris$Species=='virginica'])
tapply(mtcars$hp, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
Rprof()
lm(y~x)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
Rprof()
set.seed(10)
> x <- rep(0:1, each = 5)
> e <- rnorm(10, 0, 20)
> y <- 0.5 + 2 * x + e
set.seed(10)
> x <- rep(0:1, each = 5)
> e <- rnorm(10, 0, 20)
> y <- 0.5 + 2 * x + e
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
Rprof(NULL)
setwd("/home/gianfranco/workspace/GetAndCleaningData")
getwd()
fileUrl <- "https://youtu.be/PsE9UqoWtS4"
download.file(fileUrl,destfile = "./prova.mp4",method="curl")
download.file(fileUrl,destfile = "./prova.mp4",method="curl")
download.file()
download.file(fileUrl,destfile = "./prova.mp4",method="wget")
download.file(fileUrl,destfile = "./prova.mp4",method="auto")
